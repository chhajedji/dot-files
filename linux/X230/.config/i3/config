
# set $term --no-startup-id exec i3-sensible-terminal
set $term $TERMINAL

bindsym $mod+Shift+Return	exec --no-startup-id $term

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DejaVu Sans Mono 10.5

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec samedir.sh
bindsym $mod+KP_Enter exec samedir.sh

# kill focused window with confirmation
set $close "Close the window? (y/n)"

mode $close {
    bindsym y kill, mode default
    bindsym Return kill, mode default
    bindsym KP_Enter kill, mode default

    bindsym n mode default
    bindsym Escape mode default
}
bindsym $mod+q mode $close

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+Shift+d exec dolphin

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused and floating window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Move current workspace to monitors.
bindsym $mod+Ctrl+Left		move workspace to output left
bindsym $mod+Ctrl+Down		move workspace to output down
bindsym $mod+Ctrl+Up		move workspace to output up
bindsym $mod+Ctrl+Right		move workspace to output right
bindsym $mod+Ctrl+h		move workspace to output left
bindsym $mod+Ctrl+j		move workspace to output down
bindsym $mod+Ctrl+k		move workspace to output up
bindsym $mod+Ctrl+l		move workspace to output right

bindsym $mod+t split toggle

# toggle fullscreen mode for the focused container
bindsym F11 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
# set $ws0 "10: "
set $ws0 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+Mod2+KP_1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+Mod2+KP_2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+Mod2+KP_3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+Mod2+KP_4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+Mod2+KP_5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+Mod2+KP_6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+Mod2+KP_7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+Mod2+KP_8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+Mod2+KP_9 workspace $ws9
bindsym $mod+0 workspace $ws0
bindsym $mod+Mod2+KP_0 workspace $ws0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0

# Separate workspaces on monitors.
workspace $ws1 output eDP1
workspace $ws2 output eDP1
workspace $ws3 output eDP1
workspace $ws4 output eDP1
workspace $ws5 output eDP1
workspace $ws6 output HDMI2
workspace $ws7 output HDMI2
workspace $ws8 output HDMI2
workspace $ws9 output HDMI2
workspace $ws0 output HDMI2

exec --no-startup-id parcellite
# open applications on startup. Find class of an application with `xprop`
for_window [class="Gsimplecal"] floating enable, move down 10 px

# Scratchpad with dropdown terminal. Not a very good choice to use `konsole` for
# this purpose. Order may matter, although not tested.

for_window [class="^konsole$" title="^dropdown"] move scratchpad
exec --no-startup-id konsole -p tabtitle="dropdown"
for_window [class="^konsole$" title="^dropdown"] floating enable
for_window [class="^konsole$" title="^dropdown"] move scratchpad
for_window [class="^konsole$" title="^dropdown"] scratchpad show
for_window [class="^konsole$" title="^dropdown"] resize set 1200 650
for_window [class="^konsole$" title="^dropdown"] scratchpad show

# bindsym F12 scratchpad show; move position center
bindsym F12 [class="^konsole$" title="^dropdown"] scratchpad show; move position center
bindsym $mod+F12 exec --no-startup-id konsole -p tabtitle="dropdown"; [class="^konsole$" title="^dropdown"] scratchpad show
bindsym $mod+shift+minus move scratchpad
# Do not toggle *every* konsole windows running on scratchpad!
bindsym $mod+minus [class="^(?!konsole$)"] scratchpad show


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {

        position top
        font pango:PowerlineFont 9
        # status_command python /usr/local/lib/python3.6/dist-packages/powerline/bindings/i3/powerline-i3.py
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
}

# Polybar
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh


# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +6% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -6% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
bindsym XF86TouchpadToggle exec ~/.config/i3/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
set $black               #000000
#
# # window colors
# #                       border              background         text                 indicator
# client.focused          $bg-color           $bg-color          $text-color          #00ff00
# client.unfocused        $inacative-bg-color $inactive-bg-color $inactive-text-color #00ff00
# client.focused_inactive $inacative-bg-color $inactive-bg-color $inactive-text-color #00ff00
# client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00


# Always bind `Control+q` to something. If not binded and pressed by mistake, all
# sessions of firefox will be killed which is ultra annoying.
bindsym Control+q exec lock.sh
# bindsym Control+q exec i3lock -ef --color "$bg-color" && xset dpms 5
# bindsym Control+q exec i3lock -ei $(find /home/chinmay/Pictures/wallpapers -type f \(-iname \*.png \) | shuf -n1)       #Need to setup for different monitors. Also only .png, no other.
# bindsym Control+q exec i3lock -ei $(find ~/Pictures/wallpapers -iname *.png | shuf -n1)

# Suspend system to RAM and lock screen on wake up.
bindsym Control+Shift+q exec lock.sh && echo mem > /sys/power/state

bindsym $mod+Shift+Tab			workspace prev
bindsym $mod+Tab			workspace next

bindsym $mod+F2 exec firefox
bindsym $mod+Shift+F2 exec firefox -private-window

bindsym $mod+Shift+Delete exec $term -e htop

# resolution for monitors
exec_always xrandr --auto
exec_always xrandr | grep 'HDMI2 connected' && xrandr --output VIRTUAL1 --off --output eDP1 --mode 1600x900 --pos 0x104 --rotate normal --output DP1 --off --output HDMI2 --primary --mode 1920x1080 --pos 1600x0 --rotate normal --output HDMI1 --off --output DP2 --off


exec_always xrandr | grep 'HDMI2 disconnected' && xrandr --output VIRTUAL1 --off --output eDP1 --mode 1920x1080 --pos 0x0 --rotate normal --output DP1 --off --output HDMI2 --off --output HDMI1 --off --output DP2 --off

# for showing wifi settings on startup in i3bar
exec --no-startup-id nm-applet
exec --no-startup-id xset dpms 600

# Turnoff touchpad. Use `xinput` to see all inputs. To enable, set it to 1. Put
# this in i3 config, not .bashrc as for floating wm for my Kubuntu, a script automatically
# disables it.
# Usage: `xinput` - lists all input devices.
#        `xinput list-props [Device name in quotes/Device ID]` - lists all properties of given device.
#        `xinput set-prop [Device name in quotes/Device ID]` - set desired property for given device.
exec --no-startup-id xinput set-prop "SynPS/2 Synaptics TouchPad" "Device Enabled" 0

# compton - composite manager for i3
exec --no-startup-id compton --config ~/.config/compton/compton.conf -b


# exec killall -q /usr/lib/cups/notifier/dbus
# exec --no-startup-id dunst
exec killall -q notify-osd
exec --no-startup-id dunst -config ~/.config/dunst/dunstrc

exec XDG_CURRENT_DESKTOP=KDE

exec redshift -O 4500

# wallpaper
exec_always feh  --bg-scale ~/Pictures/wallpaper.png

#interactive screenshot by pressing printscreen
bindsym Print exec gnome-screenshot -i
#crop-area screenshot by pressing Mod + printscreen
bindsym $mod+Print exec gnome-screenshot -a

# CAPS and NUM will start only once in i3bar but will send event everytime toggled.
bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks

